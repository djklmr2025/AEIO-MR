{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "VjYy0F2gZIPR",
        "outputId": "d997b412-efb7-4a03-c794-84efc6eb46d6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'AEIO-MR'...\n",
            "remote: Enumerating objects: 9153, done.\u001b[K\n",
            "remote: Counting objects:   1% (1/54)\u001b[K\rremote: Counting objects:   3% (2/54)\u001b[K\rremote: Counting objects:   5% (3/54)\u001b[K\rremote: Counting objects:   7% (4/54)\u001b[K\rremote: Counting objects:   9% (5/54)\u001b[K\rremote: Counting objects:  11% (6/54)\u001b[K\rremote: Counting objects:  12% (7/54)\u001b[K\rremote: Counting objects:  14% (8/54)\u001b[K\rremote: Counting objects:  16% (9/54)\u001b[K\rremote: Counting objects:  18% (10/54)\u001b[K\rremote: Counting objects:  20% (11/54)\u001b[K\rremote: Counting objects:  22% (12/54)\u001b[K\rremote: Counting objects:  24% (13/54)\u001b[K\rremote: Counting objects:  25% (14/54)\u001b[K\rremote: Counting objects:  27% (15/54)\u001b[K\rremote: Counting objects:  29% (16/54)\u001b[K\rremote: Counting objects:  31% (17/54)\u001b[K\rremote: Counting objects:  33% (18/54)\u001b[K\rremote: Counting objects:  35% (19/54)\u001b[K\rremote: Counting objects:  37% (20/54)\u001b[K\rremote: Counting objects:  38% (21/54)\u001b[K\rremote: Counting objects:  40% (22/54)\u001b[K\rremote: Counting objects:  42% (23/54)\u001b[K\rremote: Counting objects:  44% (24/54)\u001b[K\rremote: Counting objects:  46% (25/54)\u001b[K\rremote: Counting objects:  48% (26/54)\u001b[K\rremote: Counting objects:  50% (27/54)\u001b[K\rremote: Counting objects:  51% (28/54)\u001b[K\rremote: Counting objects:  53% (29/54)\u001b[K\rremote: Counting objects:  55% (30/54)\u001b[K\rremote: Counting objects:  57% (31/54)\u001b[K\rremote: Counting objects:  59% (32/54)\u001b[K\rremote: Counting objects:  61% (33/54)\u001b[K\rremote: Counting objects:  62% (34/54)\u001b[K\rremote: Counting objects:  64% (35/54)\u001b[K\rremote: Counting objects:  66% (36/54)\u001b[K\rremote: Counting objects:  68% (37/54)\u001b[K\rremote: Counting objects:  70% (38/54)\u001b[K\rremote: Counting objects:  72% (39/54)\u001b[K\rremote: Counting objects:  74% (40/54)\u001b[K\rremote: Counting objects:  75% (41/54)\u001b[K\rremote: Counting objects:  77% (42/54)\u001b[K\rremote: Counting objects:  79% (43/54)\u001b[K\rremote: Counting objects:  81% (44/54)\u001b[K\rremote: Counting objects:  83% (45/54)\u001b[K\rremote: Counting objects:  85% (46/54)\u001b[K\rremote: Counting objects:  87% (47/54)\u001b[K\rremote: Counting objects:  88% (48/54)\u001b[K\rremote: Counting objects:  90% (49/54)\u001b[K\rremote: Counting objects:  92% (50/54)\u001b[K\rremote: Counting objects:  94% (51/54)\u001b[K\rremote: Counting objects:  96% (52/54)\u001b[K\rremote: Counting objects:  98% (53/54)\u001b[K\rremote: Counting objects: 100% (54/54)\u001b[K\rremote: Counting objects: 100% (54/54), done.\u001b[K\n",
            "remote: Compressing objects: 100% (27/27), done.\u001b[K\n",
            "remote: Total 9153 (delta 39), reused 28 (delta 27), pack-reused 9099 (from 1)\u001b[K\n",
            "Receiving objects: 100% (9153/9153), 89.01 MiB | 25.55 MiB/s, done.\n",
            "Resolving deltas: 100% (2397/2397), done.\n",
            "/content/AEIO-MR\n",
            "Requirement already satisfied: flask in /usr/local/lib/python3.12/dist-packages (3.1.2)\n",
            "Collecting flask-cors\n",
            "  Downloading flask_cors-6.0.1-py3-none-any.whl.metadata (5.3 kB)\n",
            "Collecting flask-socketio\n",
            "  Downloading Flask_SocketIO-5.5.1-py3-none-any.whl.metadata (2.6 kB)\n",
            "Collecting eventlet\n",
            "  Downloading eventlet-0.40.3-py3-none-any.whl.metadata (5.4 kB)\n",
            "Requirement already satisfied: blinker>=1.9.0 in /usr/local/lib/python3.12/dist-packages (from flask) (1.9.0)\n",
            "Requirement already satisfied: click>=8.1.3 in /usr/local/lib/python3.12/dist-packages (from flask) (8.2.1)\n",
            "Requirement already satisfied: itsdangerous>=2.2.0 in /usr/local/lib/python3.12/dist-packages (from flask) (2.2.0)\n",
            "Requirement already satisfied: jinja2>=3.1.2 in /usr/local/lib/python3.12/dist-packages (from flask) (3.1.6)\n",
            "Requirement already satisfied: markupsafe>=2.1.1 in /usr/local/lib/python3.12/dist-packages (from flask) (3.0.2)\n",
            "Requirement already satisfied: werkzeug>=3.1.0 in /usr/local/lib/python3.12/dist-packages (from flask) (3.1.3)\n",
            "Collecting python-socketio>=5.12.0 (from flask-socketio)\n",
            "  Downloading python_socketio-5.13.0-py3-none-any.whl.metadata (3.2 kB)\n",
            "Collecting dnspython>=1.15.0 (from eventlet)\n",
            "  Downloading dnspython-2.7.0-py3-none-any.whl.metadata (5.8 kB)\n",
            "Requirement already satisfied: greenlet>=1.0 in /usr/local/lib/python3.12/dist-packages (from eventlet) (3.2.4)\n",
            "Collecting bidict>=0.21.0 (from python-socketio>=5.12.0->flask-socketio)\n",
            "  Downloading bidict-0.23.1-py3-none-any.whl.metadata (8.7 kB)\n",
            "Collecting python-engineio>=4.11.0 (from python-socketio>=5.12.0->flask-socketio)\n",
            "  Downloading python_engineio-4.12.2-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting simple-websocket>=0.10.0 (from python-engineio>=4.11.0->python-socketio>=5.12.0->flask-socketio)\n",
            "  Downloading simple_websocket-1.1.0-py3-none-any.whl.metadata (1.5 kB)\n",
            "Collecting wsproto (from simple-websocket>=0.10.0->python-engineio>=4.11.0->python-socketio>=5.12.0->flask-socketio)\n",
            "  Downloading wsproto-1.2.0-py3-none-any.whl.metadata (5.6 kB)\n",
            "Requirement already satisfied: h11<1,>=0.9.0 in /usr/local/lib/python3.12/dist-packages (from wsproto->simple-websocket>=0.10.0->python-engineio>=4.11.0->python-socketio>=5.12.0->flask-socketio) (0.16.0)\n",
            "Downloading flask_cors-6.0.1-py3-none-any.whl (13 kB)\n",
            "Downloading Flask_SocketIO-5.5.1-py3-none-any.whl (18 kB)\n",
            "Downloading eventlet-0.40.3-py3-none-any.whl (364 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m364.3/364.3 kB\u001b[0m \u001b[31m6.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading dnspython-2.7.0-py3-none-any.whl (313 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m313.6/313.6 kB\u001b[0m \u001b[31m23.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading python_socketio-5.13.0-py3-none-any.whl (77 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m77.8/77.8 kB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading bidict-0.23.1-py3-none-any.whl (32 kB)\n",
            "Downloading python_engineio-4.12.2-py3-none-any.whl (59 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m59.5/59.5 kB\u001b[0m \u001b[31m5.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading simple_websocket-1.1.0-py3-none-any.whl (13 kB)\n",
            "Downloading wsproto-1.2.0-py3-none-any.whl (24 kB)\n",
            "Installing collected packages: wsproto, dnspython, bidict, simple-websocket, eventlet, python-engineio, flask-cors, python-socketio, flask-socketio\n",
            "Successfully installed bidict-0.23.1 dnspython-2.7.0 eventlet-0.40.3 flask-cors-6.0.1 flask-socketio-5.5.1 python-engineio-4.12.2 python-socketio-5.13.0 simple-websocket-1.1.0 wsproto-1.2.0\n",
            "[2025-09-03 04:58:42,189] INFO: 🚀 Servidor ARKAIOS iniciando…\n",
            "[2025-09-03 04:58:42,189] INFO: 📂 STORAGE: /content/AEIO-MR/data\n",
            "[2025-09-03 04:58:42,189] INFO: 🧠 MEM_DIR: /content/AEIO-MR/data/memory\n",
            "[2025-09-03 04:58:42,189] INFO: 🔗 Endpoints clave: /auth/google /chat /image /video /files /new /save /mem /analyze /raw /health\n",
            "[2025-09-03 04:58:42,190] INFO: 🌐 UI: http://127.0.0.1:5000/\n",
            "[2025-09-03 04:58:42,190] INFO: 📜 Docs: http://127.0.0.1:5000/docs  |  Health: http://127.0.0.1:5000/health\n",
            "/content/AEIO-MR/server_arkaios.py:393: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n",
            "  hb_file.write_text(datetime.utcnow().isoformat() + \"Z\", encoding=\"utf-8\")\n",
            " * Serving Flask app 'server_arkaios'\n",
            " * Debug mode: on\n",
            "\u001b[31m\u001b[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\u001b[0m\n",
            " * Running on http://127.0.0.1:5000\n",
            "\u001b[33mPress CTRL+C to quit\u001b[0m\n",
            " * Restarting with watchdog (inotify)\n",
            "[2025-09-03 04:58:42,654] INFO: 🚀 Servidor ARKAIOS iniciando…\n",
            "[2025-09-03 04:58:42,654] INFO: 📂 STORAGE: /content/AEIO-MR/data\n",
            "[2025-09-03 04:58:42,654] INFO: 🧠 MEM_DIR: /content/AEIO-MR/data/memory\n",
            "[2025-09-03 04:58:42,654] INFO: 🔗 Endpoints clave: /auth/google /chat /image /video /files /new /save /mem /analyze /raw /health\n",
            "[2025-09-03 04:58:42,654] INFO: 🌐 UI: http://127.0.0.1:5000/\n",
            "[2025-09-03 04:58:42,654] INFO: 📜 Docs: http://127.0.0.1:5000/docs  |  Health: http://127.0.0.1:5000/health\n",
            "/content/AEIO-MR/server_arkaios.py:393: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n",
            "  hb_file.write_text(datetime.utcnow().isoformat() + \"Z\", encoding=\"utf-8\")\n",
            " * Debugger is active!\n",
            " * Debugger PIN: 626-807-376\n"
          ]
        }
      ],
      "source": [
        "# Reiniciar completamente el entorno\n",
        "from google.colab import drive\n",
        "import os\n",
        "import shutil\n",
        "\n",
        "# Asegurarse de estar en el directorio raíz\n",
        "os.chdir('/content')\n",
        "\n",
        "# Eliminar completamente el directorio\n",
        "if os.path.exists('AEIO-MR'):\n",
        "    shutil.rmtree('AEIO-MR')\n",
        "\n",
        "# Clonar fresh\n",
        "!git clone https://github.com/djklmr2025/AEIO-MR\n",
        "\n",
        "# Entrar al directorio\n",
        "%cd /content/AEIO-MR\n",
        "\n",
        "# Instalar dependencias básicas primero\n",
        "!pip install flask flask-cors flask-socketio eventlet\n",
        "\n",
        "!pip install pyngrok\n",
        "from pyngrok import ngrok\n",
        "\n",
        "# Luego ejecutar e instalar lo que falte según los errores\n",
        "!python server_arkaios.py --share --always-high-vram\n",
        "\n",
        "# Para crear un túnel y acceder desde fuera de Colab\n",
        "from pyngrok import ngrok\n",
        "\n",
        "# Crear túnel HTTP en el puerto 5000\n",
        "public_url = ngrok.connect(5000)\n",
        "print(\"🌐 Tu servidor está disponible en:\", public_url)\n",
        "# Instalar y configurar ngrok\n",
        "\n",
        "# Obtener URL pública\n",
        "public_url = ngrok.connect(5000)\n",
        "print(\"🌐 Accede a tu servidor en:\", public_url) or !npm install -g localtunnel\n",
        "!lt --port 5000 &\n",
        "\n",
        "# Mantener la celda ejecutándose indefinidamente\n",
        "import time\n",
        "while True:\n",
        "    time.sleep(60)"
      ]
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "gpuType": "T4",
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}