{
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "# --- CÓDIGO COMPLETO CON CONTRASEÑA INTEGRADA ---\n",
        "import os\n",
        "import shutil\n",
        "import subprocess\n",
        "import threading\n",
        "import time\n",
        "import requests\n",
        "from IPython.display import display, HTML\n",
        "\n",
        "# Limpiar entorno\n",
        "os.chdir('/content')\n",
        "if os.path.exists('AEIO-MR'):\n",
        "    shutil.rmtree('AEIO-MR')\n",
        "\n",
        "# Clonar repositorio\n",
        "!git clone https://github.com/djklmr2025/AEIO-MR\n",
        "%cd /content/AEIO-MR\n",
        "\n",
        "# Instalar dependencias\n",
        "!pip install flask flask-cors flask-socketio eventlet\n",
        "\n",
        "# --- OBTENER CONTRASEÑA AUTOMÁTICAMENTE ---\n",
        "print(\"🔑 Obteniendo contraseña para LocalTunnel...\")\n",
        "try:\n",
        "    ip_response = requests.get('https://api.ipify.org', timeout=10)\n",
        "    TUNNEL_PASSWORD = ip_response.text.strip()\n",
        "    print(f\"✅ CONTRASEÑA OBTENIDA: {TUNNEL_PASSWORD}\")\n",
        "except:\n",
        "    TUNNEL_PASSWORD = \"34.139.182.175\"  # Usamos tu IP directamente\n",
        "    print(f\"⚠️  Usando IP conocida: {TUNNEL_PASSWORD}\")\n",
        "\n",
        "# --- FUNCIÓN PARA EJECUTAR SERVIDOR ---\n",
        "def run_server():\n",
        "    print(\"🚀 Iniciando servidor ARKAIOS...\")\n",
        "    os.system('nohup python server_arkaios.py --share --always-high-vram > server.log 2>&1 &')\n",
        "\n",
        "# --- FUNCIÓN PARA LOCAL TUNNEL CON CONTRASEÑA ---\n",
        "def setup_localtunnel_with_password():\n",
        "    print(\"🌐 Configurando LocalTunnel con contraseña...\")\n",
        "\n",
        "    # Instalar LocalTunnel\n",
        "    os.system('npm install -g localtunnel')\n",
        "\n",
        "    # Ejecutar con subdomain específico\n",
        "    os.system(f'nohup lt --port 5000 --subdomain arkaios-djklar > lt.log 2>&1 &')\n",
        "    time.sleep(8)\n",
        "\n",
        "    # Mostrar información completa con contraseña\n",
        "    display(HTML(f\"\"\"\n",
        "    <div style='background: #4CAF50; color: white; padding: 20px; border-radius: 10px;'>\n",
        "        <h2>🎉 ¡SERVIDOR ACTIVO!</h2>\n",
        "        <p><b>🌐 URL Pública:</b> <a href='https://arkaios-djklar.loca.lt' target='_blank'>https://arkaios-djklar.loca.lt</a></p>\n",
        "        <p><b>🔑 CONTRASEÑA REQUERIDA:</b> <span style='background: #FF5722; padding: 5px; border-radius: 5px;'>{TUNNEL_PASSWORD}</span></p>\n",
        "        <p><b>🏠 URL Local:</b> <a href='http://127.0.0.1:5000' target='_blank'>http://127.0.0.1:5000</a></p>\n",
        "        <p><b>📚 Docs:</b> <a href='http://127.0.0.1:5000/docs' target='_blank'>http://127.0.0.1:5000/docs</a></p>\n",
        "\n",
        "        <div style='background: #FF9800; padding: 10px; border-radius: 5px; margin-top: 10px;'>\n",
        "            <b>📝 INSTRUCCIONES:</b>\n",
        "            <ol>\n",
        "                <li>Visita: <a href='https://arkaios-djklar.loca.lt' target='_blank'>https://arkaios-djklar.loca.lt</a></li>\n",
        "                <li>Cuando pida contraseña, ingresa: <code>{TUNNEL_PASSWORD}</code></li>\n",
        "                <li>¡Listo! Acceso garantizado</li>\n",
        "            </ol>\n",
        "        </div>\n",
        "    </div>\n",
        "    \"\"\"))\n",
        "\n",
        "    print(\"📋 Logs iniciales del servidor:\")\n",
        "    os.system('tail -5 server.log')\n",
        "\n",
        "# --- EJECUCIÓN PRINCIPAL ---\n",
        "print(\"🔄 Iniciando configuración completa...\")\n",
        "\n",
        "# Paso 1: Ejecutar servidor\n",
        "run_server()\n",
        "time.sleep(15)\n",
        "\n",
        "# Paso 2: Configurar LocalTunnel con contraseña\n",
        "setup_localtunnel_with_password()\n",
        "\n",
        "# --- MONITOREO ---\n",
        "def check_server_status():\n",
        "    \"\"\"Verifica que el servidor esté respondiendo\"\"\"\n",
        "    try:\n",
        "        response = requests.get('http://127.0.0.1:5000/health', timeout=5)\n",
        "        if response.status_code == 200:\n",
        "            print(f\"✅ Servidor saludable - {time.strftime('%H:%M:%S')}\")\n",
        "        else:\n",
        "            print(f\"⚠️  Servidor con error: {response.status_code}\")\n",
        "    except:\n",
        "        print(\"❌ Servidor no responde\")\n",
        "\n",
        "# Verificar estado inicial\n",
        "check_server_status()\n",
        "\n",
        "# --- MANTENER ACTIVO ---\n",
        "print(\"\\n\" + \"=\"*70)\n",
        "print(\"🎯 SISTEMA COMPLETO - CONTRASEÑA INTEGRADA\")\n",
        "print(f\"🔑 Contraseña: {TUNNEL_PASSWORD}\")\n",
        "print(\"🌐 URL: https://arkaios-djklar.loca.lt\")\n",
        "print(\"=\"*70)\n",
        "\n",
        "# Mantener celda activa y monitorear\n",
        "try:\n",
        "    counter = 0\n",
        "    while True:\n",
        "        time.sleep(30)\n",
        "        counter += 1\n",
        "        if counter % 6 == 0:  # Cada 3 minutos\n",
        "            check_server_status()\n",
        "            print(f\"⏰ Sistema activo - {time.strftime('%H:%M:%S')}\")\n",
        "\n",
        "except KeyboardInterrupt:\n",
        "    print(\"🛑 Deteniendo servicios...\")\n",
        "    os.system('pkill -f server_arkaios.py')\n",
        "    os.system('pkill -f lt')\n",
        "    print(\"✅ Servicios detenidos\")"
      ],
      "metadata": {
        "id": "Ju2foD0AIXRD"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "gpuType": "T4",
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}